#!/bin/bash

input="The five boxing wizards jump quickly"

# Question 1: Match "bo", followed by any string, followed by "ng".
echo "Question1"
echo "$input" | grep -o 'bo.*ng'

# Question 2: Match a word, at least four letters long, that doesnâ€™t contain "u"
echo "Question2"
echo "$input" | grep -Eo '\b\w{4,}\b' | grep -v 'u'

# Question 3: Match three consecutive words, where the middle word begins with "b".
echo "Question3"
echo "$input" | grep -o '\b\w\+\sb\w\+\s\w\+\b'

# Question 4: Identify all function declarations (including parameters)
echo "Question4"
grep -E '^\s*(void|int)\s+\w+\(.*\)\s*\{' code.c


# Question 5: Extract lines where a C++ structure is defined
echo "Question5"
grep -E '^\s*struct\s+\w+\s*\{' code.c

# Question 6: Replace "marks" with "score" in the code.cpp using sed
echo "Question6"
sed -e 's/marks/score/g' code.c

# Question 7: Find lines where a function is defined with at least two arguments
echo "Question7"
grep -E '^\s*void\s+\w+\(.*,.+\)\s*\{' code.c

# Question 8: Identify lines with preprocessor directives using grep
echo "Question8"
grep -E '^\s*#\w+' code.c

# Question 9: Count total number of lines that contain function declarations or definitions.
echo "Question9"
awk '/[A-Za-z_][A-Za-z0-9_]*\s+[A-Za-z_][A-Za-z0-9_]*\s*\([^)]*\)\s*\{/{count++} END{print count}' code.c

# Question 10: Extract and list all unique function names using grep and cut (refined approach)
echo "Question10"
grep -Eo '^\s*void\s+\w+|^\s*int\s+\w+' code.c | cut -d' ' -f2 | sort -u
